@model EdwardBlog.Models.FeedbackViewModel

<!-- Modal -->
<div class="modal fade" id="EditFeedback" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create New Feedback</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Edit", "Feedbacks", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Feedback</h4>
                        @Html.HiddenFor(model=>model.Feedback.Id)
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div style="margin-left:30px">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Feedback.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Feedback.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Feedback.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Feedback.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 editor-multiline-field">
                                    @Html.EditorFor(model => model.Feedback.Content, new { htmlAttributes = new { @class = "form-control", @style = "height:100px" } })
                                    @Html.ValidationMessageFor(model => model.Feedback.Content, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Feedback.SubmitDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Feedback.SubmitDate, new { htmlAttributes = new { @class = "form-control datepicker clsDatePicker", @Value = @DateTime.Now.ToShortDateString() } })
                                    @Html.ValidationMessageFor(model => model.Feedback.SubmitDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Feedback.Fixed, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" style="text-align:center">
                                    <div class="checkbox" style="margin-left:100px">
                                        @Html.EditorFor(model => model.Feedback.Fixed)
                                        @Html.ValidationMessageFor(model => model.Feedback.Fixed, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Edit" class="btn btn-default"/>
                                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal">
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
